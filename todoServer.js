const express = require('express');
const bodyParser = require('body-parser');
const fs = require('fs');
const cors = require('cors');

const app = express();
const port = 3000;
app.listen(port, () => {
    console.log(`Example app listening on port ${port}`)
});

app.use(cors());
app.use(bodyParser.json());

module.exports = app;

let todosId = 1; //Autogenerated column value for the saved todos.

//adding a new todo
app.post("/todos", (req, res) => {
    const request = req.body;
    let id = Math.floor(Math.random()*1000);
    let todo = {...request, id: id};

    fs.readFile('todos.json', 'utf8', (err, data) => {
        if (err) {
            console.log(err.message);
        }
        const todos = JSON.parse(data);
        todos.push(todo);
        fs.writeFile('todos.json', JSON.stringify(todos), (err) => {
            if (err) {
                console.log(err.message);
            }
        });
    });
    // todos.push({...todo,id:id});
    res.status(201).send({...todo,id:id});
});

//get all todos
app.get("/todos", (req, res) => {
    fs.readFile('todos.json', 'utf8', (err, data) => {
        if (err) {
            console.log(err.message);
        } else {
            let fileData = JSON.parse(data);
            res.json(fileData);
        }
    });
});

//To retrieve a particular todo
app.get("/todos/:id", (req, res) => {
    const id = Number(req.params.id);
    let isTodoPresent = false;
    fs.readFile('todos.json', 'utf8', (err, data) => {
        if (err) {
            console.log(err.message);
        } else {
            const todos = JSON.parse(data);
            for (let todo of todos) {
                if (todo.id === id) {
                    isTodoPresent = true;
                    res.send(todo);
                }
            }
            if (!isTodoPresent)
                res.status(404).send("Not found");
        }
    });
});

app.put("/todos/:id", (req, res) => {
    const id = Number(req.params.id);
    const {title, description, completed} = req.body;
    let isTodoPresent = false;
    fs.readFile('todos.json', 'utf8', (err, data) => {
        if (err) {
            console.log(err.message);
        } else {
            const todos = JSON.parse(data);
            for (let todo of todos) {
                if (todo.id === id) {
                    isTodoPresent = true;
                    todo.title = title;
                    todo.description = description;
                    todo.completed = completed;
                    fs.writeFile('todos.json', JSON.stringify(todos), (err) => {
                        if (err) {
                            console.log(err.message);
                        }
                    });
                    res.send();
                }
            }
            if (!isTodoPresent)
                res.status(404).send("Not found");
        }
    });
});

app.delete("/todos/:id", (req, res) => {
    const id = Number(req.params.id);
    let isTodoPresent = false;
    fs.readFile('todos.json', 'utf8', (err, data) => {
        if (err) {
            console.log(err.message);
        } else {
            const todos = JSON.parse(data);
            for (let i=0;i<todos.length;i++) {
                if (todos[i].id === id) {
                    isTodoPresent = true;
                    todos.splice(i, 1);
                    fs.writeFile('todos.json', JSON.stringify(todos), (err) => {
                        if (err) {
                            console.log(err.message);
                        }
                    });
                    res.send();
                }
            }
            if (!isTodoPresent)
                res.status(404).send("Not found");
        }
    });
});
